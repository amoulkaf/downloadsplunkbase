---
- name: Deploy Release to Splunk Search Head Cluster
  hosts: searchhead_deployers
  become: true
  become_method: sudo
  become_user: splunk
  gather_facts: false

  vars_prompt:
    - name: "gitlab_repo"
      prompt: "Enter the GitLab repository URL"
      private: no
    - name: "gitlab_release_tag"
      prompt: "Enter the GitLab release tag"
      private: no

  vars:
    staging_dir: '/tmp/{{ ansible_date_time.epoch }}/{{ inventory_hostname }}'
    splunk_apps_dir: '/opt/splunk/etc/shcluster/apps'
    source_dir: '/tmp/source_apps'  # Define the source directory for apps

  tasks:
    - name: Cleanup old staging directory
      ansible.builtin.file:
        path: "{{ staging_dir }}"
        state: absent
      delegate_to: localhost

    - name: Ensure staging directory exists
      ansible.builtin.file:
        path: "{{ staging_dir }}"
        state: directory
        mode: '0700'
      delegate_to: localhost

    - name: Check existence of Splunk apps source directory
      ansible.builtin.stat:
        path: "{{ source_dir }}"
      register: source_dir_stat
      delegate_to: localhost

    - name: Assert source directory exists
      ansible.builtin.assert:
        that:
          - source_dir_stat.stat.exists
        fail_msg: "Source directory {{ source_dir }} does not exist. Check configuration and rerun the playbook."

    - name: Fetch release from GitLab
      ansible.builtin.git:
        repo: "{{ gitlab_repo }}"
        dest: "{{ staging_dir }}"
        version: "{{ gitlab_release_tag }}"
        force: yes
      delegate_to: localhost

    - name: Copy release to Splunk apps directory
      ansible.builtin.copy:
        src: "{{ staging_dir }}/"
        dest: "{{ splunk_apps_dir }}"
        remote_src: true

    - name: Trigger Splunk to reload apps
      ansible.builtin.command: '/opt/splunk/bin/splunk apply shcluster-bundle -target captain_url -auth admin:changeme'
      delegate_to: localhost
      become: true
      become_user: splunk

  handlers:
    - name: Restart Splunk
      ansible.builtin.service:
        name: splunk
        state: restarted
      become: true
      become_user: splunk
